<?xml version="1.0"?>

<workflow-definition
	xmlns="urn:liferay.com:liferay-workflow_7.4.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:liferay.com:liferay-workflow_7.4.0 http://www.liferay.com/dtd/liferay-workflow-definition_7_4_0.xsd"
>
	<description>A single approver can approve a workflow content.</description>
	<version>35</version>
	<state>
		<id>created</id>
		<metadata><![CDATA[{"xy":[165,76],"transitions":{"review":{"bendpoints":[]}}}]]></metadata>
		<initial>true</initial>
		<labels>
			<label language-id="en_US">
				created
			</label>
		</labels>
		<transitions>
			<transition>
				<labels>
					<label language-id="en_US">
						review
					</label>
				</labels>
				<id>created_review_review</id>
				<target>review</target>
				<default>true</default>
			</transition>
		</transitions>
	</state>
	<state>
		<id>approved</id>
		<metadata>
			<![CDATA[
				{
					"xy": [
						539,
						74
					],
					"terminal": true
				}
			]]>
		</metadata>
		<actions>
			<action>
				<name>approve</name>
				<script>
					<![CDATA[
						import com.liferay.portal.kernel.workflow.WorkflowConstants;
						import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import bd.gov.dgfood.common.util.WorkflowUtil;

						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.getLabelStatus("approved"), workflowContext);
						WorkflowUtil.sendUserNotification(WorkflowConstants.getLabelStatus("approved"),workflowContext);
					]]>
				</script>
				<script-language>groovy</script-language>
				<execution-type>onEntry</execution-type>
			</action>
			<notification>
				<name>Creator Modification Notification</name>
				<template>
					<![CDATA[Your submission was Approved by ${userName}]]>
				</template>
				<template-language>freemarker</template-language>
				<notification-type>email</notification-type>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<user />
				</recipients>
				<execution-type>onEntry</execution-type>
			</notification>
		</actions>
		<labels>
			<label language-id="en_US">
				approved
			</label>
		</labels>
	</state>
	<task>
		<id>update</id>
		<description>Ask a user to work on the item.</description>
		<metadata><![CDATA[{"xy":[164,533],"transitions":{"review":{"bendpoints":[]}}}]]></metadata>
		<actions>
			<action>
				<name>reject</name>
				<script>
					<![CDATA[
						import com.liferay.portal.kernel.workflow.WorkflowConstants;
						import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import bd.gov.dgfood.common.util.WorkflowUtil;

						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.getLabelStatus("denied"), workflowContext);
						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.getLabelStatus("pending"), workflowContext);
                        WorkflowUtil.sendUserNotification(WorkflowConstants.getLabelStatus("denied"),workflowContext);
					]]>
				</script>
				<script-language>groovy</script-language>
				<execution-type>onAssignment</execution-type>
			</action>
			<notification>
				<name>Creator Modification Notification</name>
				<template>
					<![CDATA[Your submission was rejected by ${userName}, please modify and resubmit.]]>
				</template>
				<template-language>freemarker</template-language>
				<notification-type>email</notification-type>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<user />
				</recipients>
				<execution-type>onAssignment</execution-type>
			</notification>
		</actions>
		<assignments>
			<user />
		</assignments>
		<labels>
			<label language-id="en_US">
				update
			</label>
		</labels>
		<transitions>
			<transition>
				<labels>
					<label language-id="en_US">
						resubmit
					</label>
				</labels>
				<id>resubmit</id>
				<target>review</target>
				<default>true</default>
			</transition>
		</transitions>
	</task>
	<task>
		<id>review</id>
		<description>Ask a user to work on the item.</description>
		<metadata><![CDATA[{"xy":[165,292],"transitions":{"update":{"bendpoints":[]}}}]]></metadata>
		<actions>
			<notification>
				<name>Review Notification</name>
				<description>
					<![CDATA[]]>
				</description>
				<template>
					<![CDATA[${userName} sent you a ${entryType} for review in the workflow.]]>
				</template>
				<template-language>freemarker</template-language>
				<notification-type>email</notification-type>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<scripted-recipient>
						<script>
							<![CDATA[import java.util.ArrayList;
                                  import java.util.List;
                                  import com.liferay.portal.kernel.model.Role;
                                  import com.liferay.portal.kernel.model.User;
                                  import com.liferay.portal.kernel.model.role.RoleConstants;
                                  import com.liferay.portal.kernel.service.RoleLocalServiceUtil;
                                  import com.liferay.portal.kernel.service.UserLocalServiceUtil;
                                  import com.liferay.portal.kernel.util.GetterUtil;
                                  import com.liferay.portal.kernel.workflow.WorkflowConstants;

                                    roles = new ArrayList<Role>();
                                    role = null;

                                   long tassigneeUserId = GetterUtil.getLong(workflowContext.get("ASSIGNEE_USER_ID"));
                                   long tassigneeRoleId = GetterUtil.getLong(workflowContext.get("ASSIGNEE_ROLE_ID"));
                                   long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));

                                	user = UserLocalServiceUtil.fetchUser(tassigneeUserId);

                               	 if(user == null ){
                                         role = RoleLocalServiceUtil.fetchRole(tassigneeRoleId);

                                        if (role == null) {
                                            role = RoleLocalServiceUtil.fetchRole(companyId, RoleConstants.PORTAL_CONTENT_REVIEWER);
                                        }
                                        roles.add(role);
                                }else{
										roles = null;
								}
                     System.out.println("Notification tassigneeUserId..."+tassigneeUserId);
                     System.out.println("Notification tassigneeRoleId..."+tassigneeRoleId);
]]>
						</script>
						<script-language>groovy</script-language>
					</scripted-recipient>
				</recipients>
				<execution-type>onAssignment</execution-type>
			</notification>
			<notification>
				<name>Review Completion Notification</name>
				<description>
					<![CDATA[]]>
				</description>
				<template>
					<![CDATA[Your submission was reviewed<#if taskComments?has_content> and the reviewer applied the following ${taskComments}</#if>.]]>
				</template>
				<template-language>freemarker</template-language>
				<notification-type>email</notification-type>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<assignees />
				</recipients>
				<execution-type>onExit</execution-type>
			</notification>
		</actions>
		<assignments>
			<scripted-assignment>
				<script>
					<![CDATA[import java.util.ArrayList;
                        import java.util.List;
                        import com.liferay.portal.kernel.model.Role;
                        import com.liferay.portal.kernel.model.User;
                        import com.liferay.portal.kernel.model.role.RoleConstants;
                        import com.liferay.portal.kernel.service.RoleLocalServiceUtil;
                        import com.liferay.portal.kernel.service.UserLocalServiceUtil;
                        import com.liferay.portal.kernel.util.GetterUtil;
                        import com.liferay.portal.kernel.workflow.WorkflowConstants;
                        import bd.gov.dgfood.common.services.model.UserLocation;
                        import bd.gov.dgfood.common.services.service.UserLocationLocalServiceUtil;
                        import workflow.demo.web.constants.WorkflowUtil

                          user = null;
                          roles = new ArrayList<Role>();
                          String roleKey = "ACF";

                        String locationCode = GetterUtil.getString(workflowContext.get("LOCATION_CODE"));
                        long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));

					  role = RoleLocalServiceUtil.fetchRole(companyId, roleKey);

                      if(role != null){

                          UserLocation location = UserLocationLocalServiceUtil.getUserLocationByRK_LC(roleKey, locationCode);

                          if (location != null) {
                                boolean userHasRole = UserLocalServiceUtil.hasRoleUser(role.getRoleId(), location.getUserId());
                                if(userHasRole){
                                      user = UserLocalServiceUtil.fetchUser(location.getUserId());
                                }
                          }

                          if (user != null) {
                                      workflowContext.put("ASSIGNEE_USER_ID", user.getUserId());
                                      roles = null;
                          }
                       }

                        if(user == null){
                              role = RoleLocalServiceUtil.fetchRole(companyId, roleKey);
                              if (role == null) {
                                    role = RoleLocalServiceUtil.fetchRole(companyId, RoleConstants.PORTAL_CONTENT_REVIEWER);
                               }

                        if (role != null) {
								workflowContext.put("ASSIGNEE_ROLE_ID", role.getRoleId());
                         }

                              roles.add(role);
                     }
]]>
				</script>
				<script-language>groovy</script-language>
			</scripted-assignment>
		</assignments>
		<labels>
			<label language-id="en_US">
				review
			</label>
		</labels>
		<transitions>
			<transition>
				<labels>
					<label language-id="en_US">
						approve
					</label>
				</labels>
				<id>approve</id>
				<target>approved</target>
				<default>true</default>
			</transition>
			<transition>
				<labels>
					<label language-id="en_US">
						reject
					</label>
				</labels>
				<id>reject</id>
				<target>update</target>
				<default>false</default>
			</transition>
		</transitions>
	</task>
</workflow-definition>