/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package bd.gov.dgfood.common.services.model;

import bd.gov.dgfood.common.services.service.persistence.DeliveryOrderPK;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.LocalizedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the DeliveryOrder service. Represents a row in the &quot;DGF_DeliveryOrder&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>bd.gov.dgfood.common.services.model.impl.DeliveryOrderModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>bd.gov.dgfood.common.services.model.impl.DeliveryOrderImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DeliveryOrder
 * @generated
 */
@ProviderType
public interface DeliveryOrderModel
	extends BaseModel<DeliveryOrder>, LocalizedModel, ShardedModel,
			StagedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a delivery order model instance should use the {@link DeliveryOrder} interface instead.
	 */

	/**
	 * Returns the primary key of this delivery order.
	 *
	 * @return the primary key of this delivery order
	 */
	public DeliveryOrderPK getPrimaryKey();

	/**
	 * Sets the primary key of this delivery order.
	 *
	 * @param primaryKey the primary key of this delivery order
	 */
	public void setPrimaryKey(DeliveryOrderPK primaryKey);

	/**
	 * Returns the uuid of this delivery order.
	 *
	 * @return the uuid of this delivery order
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this delivery order.
	 *
	 * @param uuid the uuid of this delivery order
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the delivery order ID of this delivery order.
	 *
	 * @return the delivery order ID of this delivery order
	 */
	public long getDeliveryOrderId();

	/**
	 * Sets the delivery order ID of this delivery order.
	 *
	 * @param deliveryOrderId the delivery order ID of this delivery order
	 */
	public void setDeliveryOrderId(long deliveryOrderId);

	/**
	 * Returns the indent ID of this delivery order.
	 *
	 * @return the indent ID of this delivery order
	 */
	public long getIndentId();

	/**
	 * Sets the indent ID of this delivery order.
	 *
	 * @param indentId the indent ID of this delivery order
	 */
	public void setIndentId(long indentId);

	/**
	 * Returns the delivery order no of this delivery order.
	 *
	 * @return the delivery order no of this delivery order
	 */
	@AutoEscape
	public String getDeliveryOrderNo();

	/**
	 * Sets the delivery order no of this delivery order.
	 *
	 * @param deliveryOrderNo the delivery order no of this delivery order
	 */
	public void setDeliveryOrderNo(String deliveryOrderNo);

	/**
	 * Returns the customer no of this delivery order.
	 *
	 * @return the customer no of this delivery order
	 */
	@AutoEscape
	public String getCustomerNo();

	/**
	 * Sets the customer no of this delivery order.
	 *
	 * @param customerNo the customer no of this delivery order
	 */
	public void setCustomerNo(String customerNo);

	/**
	 * Returns the name of this delivery order.
	 *
	 * @return the name of this delivery order
	 */
	public String getName();

	/**
	 * Returns the localized name of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized name of this delivery order
	 */
	@AutoEscape
	public String getName(Locale locale);

	/**
	 * Returns the localized name of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized name of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getName(Locale locale, boolean useDefault);

	/**
	 * Returns the localized name of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized name of this delivery order
	 */
	@AutoEscape
	public String getName(String languageId);

	/**
	 * Returns the localized name of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized name of this delivery order
	 */
	@AutoEscape
	public String getName(String languageId, boolean useDefault);

	@AutoEscape
	public String getNameCurrentLanguageId();

	@AutoEscape
	public String getNameCurrentValue();

	/**
	 * Returns a map of the locales and localized names of this delivery order.
	 *
	 * @return the locales and localized names of this delivery order
	 */
	public Map<Locale, String> getNameMap();

	/**
	 * Sets the name of this delivery order.
	 *
	 * @param name the name of this delivery order
	 */
	public void setName(String name);

	/**
	 * Sets the localized name of this delivery order in the language.
	 *
	 * @param name the localized name of this delivery order
	 * @param locale the locale of the language
	 */
	public void setName(String name, Locale locale);

	/**
	 * Sets the localized name of this delivery order in the language, and sets the default locale.
	 *
	 * @param name the localized name of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setName(String name, Locale locale, Locale defaultLocale);

	public void setNameCurrentLanguageId(String languageId);

	/**
	 * Sets the localized names of this delivery order from the map of locales and localized names.
	 *
	 * @param nameMap the locales and localized names of this delivery order
	 */
	public void setNameMap(Map<Locale, String> nameMap);

	/**
	 * Sets the localized names of this delivery order from the map of locales and localized names, and sets the default locale.
	 *
	 * @param nameMap the locales and localized names of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setNameMap(Map<Locale, String> nameMap, Locale defaultLocale);

	/**
	 * Returns the do date of this delivery order.
	 *
	 * @return the do date of this delivery order
	 */
	public Date getDoDate();

	/**
	 * Sets the do date of this delivery order.
	 *
	 * @param doDate the do date of this delivery order
	 */
	public void setDoDate(Date doDate);

	/**
	 * Returns the commodity of this delivery order.
	 *
	 * @return the commodity of this delivery order
	 */
	public String getCommodity();

	/**
	 * Returns the localized commodity of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized commodity of this delivery order
	 */
	@AutoEscape
	public String getCommodity(Locale locale);

	/**
	 * Returns the localized commodity of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized commodity of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getCommodity(Locale locale, boolean useDefault);

	/**
	 * Returns the localized commodity of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized commodity of this delivery order
	 */
	@AutoEscape
	public String getCommodity(String languageId);

	/**
	 * Returns the localized commodity of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized commodity of this delivery order
	 */
	@AutoEscape
	public String getCommodity(String languageId, boolean useDefault);

	@AutoEscape
	public String getCommodityCurrentLanguageId();

	@AutoEscape
	public String getCommodityCurrentValue();

	/**
	 * Returns a map of the locales and localized commodities of this delivery order.
	 *
	 * @return the locales and localized commodities of this delivery order
	 */
	public Map<Locale, String> getCommodityMap();

	/**
	 * Sets the commodity of this delivery order.
	 *
	 * @param commodity the commodity of this delivery order
	 */
	public void setCommodity(String commodity);

	/**
	 * Sets the localized commodity of this delivery order in the language.
	 *
	 * @param commodity the localized commodity of this delivery order
	 * @param locale the locale of the language
	 */
	public void setCommodity(String commodity, Locale locale);

	/**
	 * Sets the localized commodity of this delivery order in the language, and sets the default locale.
	 *
	 * @param commodity the localized commodity of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setCommodity(
		String commodity, Locale locale, Locale defaultLocale);

	public void setCommodityCurrentLanguageId(String languageId);

	/**
	 * Sets the localized commodities of this delivery order from the map of locales and localized commodities.
	 *
	 * @param commodityMap the locales and localized commodities of this delivery order
	 */
	public void setCommodityMap(Map<Locale, String> commodityMap);

	/**
	 * Sets the localized commodities of this delivery order from the map of locales and localized commodities, and sets the default locale.
	 *
	 * @param commodityMap the locales and localized commodities of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setCommodityMap(
		Map<Locale, String> commodityMap, Locale defaultLocale);

	/**
	 * Returns the commodity description of this delivery order.
	 *
	 * @return the commodity description of this delivery order
	 */
	public String getCommodityDescription();

	/**
	 * Returns the localized commodity description of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized commodity description of this delivery order
	 */
	@AutoEscape
	public String getCommodityDescription(Locale locale);

	/**
	 * Returns the localized commodity description of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized commodity description of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getCommodityDescription(Locale locale, boolean useDefault);

	/**
	 * Returns the localized commodity description of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized commodity description of this delivery order
	 */
	@AutoEscape
	public String getCommodityDescription(String languageId);

	/**
	 * Returns the localized commodity description of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized commodity description of this delivery order
	 */
	@AutoEscape
	public String getCommodityDescription(
		String languageId, boolean useDefault);

	@AutoEscape
	public String getCommodityDescriptionCurrentLanguageId();

	@AutoEscape
	public String getCommodityDescriptionCurrentValue();

	/**
	 * Returns a map of the locales and localized commodity descriptions of this delivery order.
	 *
	 * @return the locales and localized commodity descriptions of this delivery order
	 */
	public Map<Locale, String> getCommodityDescriptionMap();

	/**
	 * Sets the commodity description of this delivery order.
	 *
	 * @param commodityDescription the commodity description of this delivery order
	 */
	public void setCommodityDescription(String commodityDescription);

	/**
	 * Sets the localized commodity description of this delivery order in the language.
	 *
	 * @param commodityDescription the localized commodity description of this delivery order
	 * @param locale the locale of the language
	 */
	public void setCommodityDescription(
		String commodityDescription, Locale locale);

	/**
	 * Sets the localized commodity description of this delivery order in the language, and sets the default locale.
	 *
	 * @param commodityDescription the localized commodity description of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setCommodityDescription(
		String commodityDescription, Locale locale, Locale defaultLocale);

	public void setCommodityDescriptionCurrentLanguageId(String languageId);

	/**
	 * Sets the localized commodity descriptions of this delivery order from the map of locales and localized commodity descriptions.
	 *
	 * @param commodityDescriptionMap the locales and localized commodity descriptions of this delivery order
	 */
	public void setCommodityDescriptionMap(
		Map<Locale, String> commodityDescriptionMap);

	/**
	 * Sets the localized commodity descriptions of this delivery order from the map of locales and localized commodity descriptions, and sets the default locale.
	 *
	 * @param commodityDescriptionMap the locales and localized commodity descriptions of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setCommodityDescriptionMap(
		Map<Locale, String> commodityDescriptionMap, Locale defaultLocale);

	/**
	 * Returns the do qty of this delivery order.
	 *
	 * @return the do qty of this delivery order
	 */
	public String getDoQty();

	/**
	 * Returns the localized do qty of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized do qty of this delivery order
	 */
	@AutoEscape
	public String getDoQty(Locale locale);

	/**
	 * Returns the localized do qty of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized do qty of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getDoQty(Locale locale, boolean useDefault);

	/**
	 * Returns the localized do qty of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized do qty of this delivery order
	 */
	@AutoEscape
	public String getDoQty(String languageId);

	/**
	 * Returns the localized do qty of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized do qty of this delivery order
	 */
	@AutoEscape
	public String getDoQty(String languageId, boolean useDefault);

	@AutoEscape
	public String getDoQtyCurrentLanguageId();

	@AutoEscape
	public String getDoQtyCurrentValue();

	/**
	 * Returns a map of the locales and localized do qties of this delivery order.
	 *
	 * @return the locales and localized do qties of this delivery order
	 */
	public Map<Locale, String> getDoQtyMap();

	/**
	 * Sets the do qty of this delivery order.
	 *
	 * @param doQty the do qty of this delivery order
	 */
	public void setDoQty(String doQty);

	/**
	 * Sets the localized do qty of this delivery order in the language.
	 *
	 * @param doQty the localized do qty of this delivery order
	 * @param locale the locale of the language
	 */
	public void setDoQty(String doQty, Locale locale);

	/**
	 * Sets the localized do qty of this delivery order in the language, and sets the default locale.
	 *
	 * @param doQty the localized do qty of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setDoQty(String doQty, Locale locale, Locale defaultLocale);

	public void setDoQtyCurrentLanguageId(String languageId);

	/**
	 * Sets the localized do qties of this delivery order from the map of locales and localized do qties.
	 *
	 * @param doQtyMap the locales and localized do qties of this delivery order
	 */
	public void setDoQtyMap(Map<Locale, String> doQtyMap);

	/**
	 * Sets the localized do qties of this delivery order from the map of locales and localized do qties, and sets the default locale.
	 *
	 * @param doQtyMap the locales and localized do qties of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setDoQtyMap(Map<Locale, String> doQtyMap, Locale defaultLocale);

	/**
	 * Returns the do qty unit of this delivery order.
	 *
	 * @return the do qty unit of this delivery order
	 */
	public String getDoQtyUnit();

	/**
	 * Returns the localized do qty unit of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized do qty unit of this delivery order
	 */
	@AutoEscape
	public String getDoQtyUnit(Locale locale);

	/**
	 * Returns the localized do qty unit of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized do qty unit of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getDoQtyUnit(Locale locale, boolean useDefault);

	/**
	 * Returns the localized do qty unit of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized do qty unit of this delivery order
	 */
	@AutoEscape
	public String getDoQtyUnit(String languageId);

	/**
	 * Returns the localized do qty unit of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized do qty unit of this delivery order
	 */
	@AutoEscape
	public String getDoQtyUnit(String languageId, boolean useDefault);

	@AutoEscape
	public String getDoQtyUnitCurrentLanguageId();

	@AutoEscape
	public String getDoQtyUnitCurrentValue();

	/**
	 * Returns a map of the locales and localized do qty units of this delivery order.
	 *
	 * @return the locales and localized do qty units of this delivery order
	 */
	public Map<Locale, String> getDoQtyUnitMap();

	/**
	 * Sets the do qty unit of this delivery order.
	 *
	 * @param doQtyUnit the do qty unit of this delivery order
	 */
	public void setDoQtyUnit(String doQtyUnit);

	/**
	 * Sets the localized do qty unit of this delivery order in the language.
	 *
	 * @param doQtyUnit the localized do qty unit of this delivery order
	 * @param locale the locale of the language
	 */
	public void setDoQtyUnit(String doQtyUnit, Locale locale);

	/**
	 * Sets the localized do qty unit of this delivery order in the language, and sets the default locale.
	 *
	 * @param doQtyUnit the localized do qty unit of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setDoQtyUnit(
		String doQtyUnit, Locale locale, Locale defaultLocale);

	public void setDoQtyUnitCurrentLanguageId(String languageId);

	/**
	 * Sets the localized do qty units of this delivery order from the map of locales and localized do qty units.
	 *
	 * @param doQtyUnitMap the locales and localized do qty units of this delivery order
	 */
	public void setDoQtyUnitMap(Map<Locale, String> doQtyUnitMap);

	/**
	 * Sets the localized do qty units of this delivery order from the map of locales and localized do qty units, and sets the default locale.
	 *
	 * @param doQtyUnitMap the locales and localized do qty units of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setDoQtyUnitMap(
		Map<Locale, String> doQtyUnitMap, Locale defaultLocale);

	/**
	 * Returns the depo of this delivery order.
	 *
	 * @return the depo of this delivery order
	 */
	public String getDepo();

	/**
	 * Returns the localized depo of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized depo of this delivery order
	 */
	@AutoEscape
	public String getDepo(Locale locale);

	/**
	 * Returns the localized depo of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized depo of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getDepo(Locale locale, boolean useDefault);

	/**
	 * Returns the localized depo of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized depo of this delivery order
	 */
	@AutoEscape
	public String getDepo(String languageId);

	/**
	 * Returns the localized depo of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized depo of this delivery order
	 */
	@AutoEscape
	public String getDepo(String languageId, boolean useDefault);

	@AutoEscape
	public String getDepoCurrentLanguageId();

	@AutoEscape
	public String getDepoCurrentValue();

	/**
	 * Returns a map of the locales and localized depos of this delivery order.
	 *
	 * @return the locales and localized depos of this delivery order
	 */
	public Map<Locale, String> getDepoMap();

	/**
	 * Sets the depo of this delivery order.
	 *
	 * @param depo the depo of this delivery order
	 */
	public void setDepo(String depo);

	/**
	 * Sets the localized depo of this delivery order in the language.
	 *
	 * @param depo the localized depo of this delivery order
	 * @param locale the locale of the language
	 */
	public void setDepo(String depo, Locale locale);

	/**
	 * Sets the localized depo of this delivery order in the language, and sets the default locale.
	 *
	 * @param depo the localized depo of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setDepo(String depo, Locale locale, Locale defaultLocale);

	public void setDepoCurrentLanguageId(String languageId);

	/**
	 * Sets the localized depos of this delivery order from the map of locales and localized depos.
	 *
	 * @param depoMap the locales and localized depos of this delivery order
	 */
	public void setDepoMap(Map<Locale, String> depoMap);

	/**
	 * Sets the localized depos of this delivery order from the map of locales and localized depos, and sets the default locale.
	 *
	 * @param depoMap the locales and localized depos of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setDepoMap(Map<Locale, String> depoMap, Locale defaultLocale);

	/**
	 * Returns the warehouse no of this delivery order.
	 *
	 * @return the warehouse no of this delivery order
	 */
	@AutoEscape
	public String getWarehouseNo();

	/**
	 * Sets the warehouse no of this delivery order.
	 *
	 * @param warehouseNo the warehouse no of this delivery order
	 */
	public void setWarehouseNo(String warehouseNo);

	/**
	 * Returns the khamaal no of this delivery order.
	 *
	 * @return the khamaal no of this delivery order
	 */
	@AutoEscape
	public String getKhamaalNo();

	/**
	 * Sets the khamaal no of this delivery order.
	 *
	 * @param khamaalNo the khamaal no of this delivery order
	 */
	public void setKhamaalNo(String khamaalNo);

	/**
	 * Returns the l ua no of this delivery order.
	 *
	 * @return the l ua no of this delivery order
	 */
	@AutoEscape
	public String getLUANo();

	/**
	 * Sets the l ua no of this delivery order.
	 *
	 * @param lUANo the l ua no of this delivery order
	 */
	public void setLUANo(String lUANo);

	/**
	 * Returns the l ua date of this delivery order.
	 *
	 * @return the l ua date of this delivery order
	 */
	public Date getLUADate();

	/**
	 * Sets the l ua date of this delivery order.
	 *
	 * @param lUADate the l ua date of this delivery order
	 */
	public void setLUADate(Date lUADate);

	/**
	 * Returns the bag unit of this delivery order.
	 *
	 * @return the bag unit of this delivery order
	 */
	public String getBagUnit();

	/**
	 * Returns the localized bag unit of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized bag unit of this delivery order
	 */
	@AutoEscape
	public String getBagUnit(Locale locale);

	/**
	 * Returns the localized bag unit of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized bag unit of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getBagUnit(Locale locale, boolean useDefault);

	/**
	 * Returns the localized bag unit of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized bag unit of this delivery order
	 */
	@AutoEscape
	public String getBagUnit(String languageId);

	/**
	 * Returns the localized bag unit of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized bag unit of this delivery order
	 */
	@AutoEscape
	public String getBagUnit(String languageId, boolean useDefault);

	@AutoEscape
	public String getBagUnitCurrentLanguageId();

	@AutoEscape
	public String getBagUnitCurrentValue();

	/**
	 * Returns a map of the locales and localized bag units of this delivery order.
	 *
	 * @return the locales and localized bag units of this delivery order
	 */
	public Map<Locale, String> getBagUnitMap();

	/**
	 * Sets the bag unit of this delivery order.
	 *
	 * @param bagUnit the bag unit of this delivery order
	 */
	public void setBagUnit(String bagUnit);

	/**
	 * Sets the localized bag unit of this delivery order in the language.
	 *
	 * @param bagUnit the localized bag unit of this delivery order
	 * @param locale the locale of the language
	 */
	public void setBagUnit(String bagUnit, Locale locale);

	/**
	 * Sets the localized bag unit of this delivery order in the language, and sets the default locale.
	 *
	 * @param bagUnit the localized bag unit of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setBagUnit(String bagUnit, Locale locale, Locale defaultLocale);

	public void setBagUnitCurrentLanguageId(String languageId);

	/**
	 * Sets the localized bag units of this delivery order from the map of locales and localized bag units.
	 *
	 * @param bagUnitMap the locales and localized bag units of this delivery order
	 */
	public void setBagUnitMap(Map<Locale, String> bagUnitMap);

	/**
	 * Sets the localized bag units of this delivery order from the map of locales and localized bag units, and sets the default locale.
	 *
	 * @param bagUnitMap the locales and localized bag units of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setBagUnitMap(
		Map<Locale, String> bagUnitMap, Locale defaultLocale);

	/**
	 * Returns the vehicle no of this delivery order.
	 *
	 * @return the vehicle no of this delivery order
	 */
	@AutoEscape
	public String getVehicleNo();

	/**
	 * Sets the vehicle no of this delivery order.
	 *
	 * @param vehicleNo the vehicle no of this delivery order
	 */
	public void setVehicleNo(String vehicleNo);

	/**
	 * Returns the gate keeper of this delivery order.
	 *
	 * @return the gate keeper of this delivery order
	 */
	public String getGateKeeper();

	/**
	 * Returns the localized gate keeper of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized gate keeper of this delivery order
	 */
	@AutoEscape
	public String getGateKeeper(Locale locale);

	/**
	 * Returns the localized gate keeper of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized gate keeper of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getGateKeeper(Locale locale, boolean useDefault);

	/**
	 * Returns the localized gate keeper of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized gate keeper of this delivery order
	 */
	@AutoEscape
	public String getGateKeeper(String languageId);

	/**
	 * Returns the localized gate keeper of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized gate keeper of this delivery order
	 */
	@AutoEscape
	public String getGateKeeper(String languageId, boolean useDefault);

	@AutoEscape
	public String getGateKeeperCurrentLanguageId();

	@AutoEscape
	public String getGateKeeperCurrentValue();

	/**
	 * Returns a map of the locales and localized gate keepers of this delivery order.
	 *
	 * @return the locales and localized gate keepers of this delivery order
	 */
	public Map<Locale, String> getGateKeeperMap();

	/**
	 * Sets the gate keeper of this delivery order.
	 *
	 * @param gateKeeper the gate keeper of this delivery order
	 */
	public void setGateKeeper(String gateKeeper);

	/**
	 * Sets the localized gate keeper of this delivery order in the language.
	 *
	 * @param gateKeeper the localized gate keeper of this delivery order
	 * @param locale the locale of the language
	 */
	public void setGateKeeper(String gateKeeper, Locale locale);

	/**
	 * Sets the localized gate keeper of this delivery order in the language, and sets the default locale.
	 *
	 * @param gateKeeper the localized gate keeper of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setGateKeeper(
		String gateKeeper, Locale locale, Locale defaultLocale);

	public void setGateKeeperCurrentLanguageId(String languageId);

	/**
	 * Sets the localized gate keepers of this delivery order from the map of locales and localized gate keepers.
	 *
	 * @param gateKeeperMap the locales and localized gate keepers of this delivery order
	 */
	public void setGateKeeperMap(Map<Locale, String> gateKeeperMap);

	/**
	 * Sets the localized gate keepers of this delivery order from the map of locales and localized gate keepers, and sets the default locale.
	 *
	 * @param gateKeeperMap the locales and localized gate keepers of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setGateKeeperMap(
		Map<Locale, String> gateKeeperMap, Locale defaultLocale);

	/**
	 * Returns the goods issue date of this delivery order.
	 *
	 * @return the goods issue date of this delivery order
	 */
	@AutoEscape
	public String getGoodsIssueDate();

	/**
	 * Sets the goods issue date of this delivery order.
	 *
	 * @param goodsIssueDate the goods issue date of this delivery order
	 */
	public void setGoodsIssueDate(String goodsIssueDate);

	/**
	 * Returns the ship to party of this delivery order.
	 *
	 * @return the ship to party of this delivery order
	 */
	@AutoEscape
	public String getShipToParty();

	/**
	 * Sets the ship to party of this delivery order.
	 *
	 * @param shipToParty the ship to party of this delivery order
	 */
	public void setShipToParty(String shipToParty);

	/**
	 * Returns the ship to party name of this delivery order.
	 *
	 * @return the ship to party name of this delivery order
	 */
	public String getShipToPartyName();

	/**
	 * Returns the localized ship to party name of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized ship to party name of this delivery order
	 */
	@AutoEscape
	public String getShipToPartyName(Locale locale);

	/**
	 * Returns the localized ship to party name of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized ship to party name of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getShipToPartyName(Locale locale, boolean useDefault);

	/**
	 * Returns the localized ship to party name of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized ship to party name of this delivery order
	 */
	@AutoEscape
	public String getShipToPartyName(String languageId);

	/**
	 * Returns the localized ship to party name of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized ship to party name of this delivery order
	 */
	@AutoEscape
	public String getShipToPartyName(String languageId, boolean useDefault);

	@AutoEscape
	public String getShipToPartyNameCurrentLanguageId();

	@AutoEscape
	public String getShipToPartyNameCurrentValue();

	/**
	 * Returns a map of the locales and localized ship to party names of this delivery order.
	 *
	 * @return the locales and localized ship to party names of this delivery order
	 */
	public Map<Locale, String> getShipToPartyNameMap();

	/**
	 * Sets the ship to party name of this delivery order.
	 *
	 * @param shipToPartyName the ship to party name of this delivery order
	 */
	public void setShipToPartyName(String shipToPartyName);

	/**
	 * Sets the localized ship to party name of this delivery order in the language.
	 *
	 * @param shipToPartyName the localized ship to party name of this delivery order
	 * @param locale the locale of the language
	 */
	public void setShipToPartyName(String shipToPartyName, Locale locale);

	/**
	 * Sets the localized ship to party name of this delivery order in the language, and sets the default locale.
	 *
	 * @param shipToPartyName the localized ship to party name of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setShipToPartyName(
		String shipToPartyName, Locale locale, Locale defaultLocale);

	public void setShipToPartyNameCurrentLanguageId(String languageId);

	/**
	 * Sets the localized ship to party names of this delivery order from the map of locales and localized ship to party names.
	 *
	 * @param shipToPartyNameMap the locales and localized ship to party names of this delivery order
	 */
	public void setShipToPartyNameMap(Map<Locale, String> shipToPartyNameMap);

	/**
	 * Sets the localized ship to party names of this delivery order from the map of locales and localized ship to party names, and sets the default locale.
	 *
	 * @param shipToPartyNameMap the locales and localized ship to party names of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setShipToPartyNameMap(
		Map<Locale, String> shipToPartyNameMap, Locale defaultLocale);

	/**
	 * Returns the delivered qty of this delivery order.
	 *
	 * @return the delivered qty of this delivery order
	 */
	public String getDeliveredQty();

	/**
	 * Returns the localized delivered qty of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized delivered qty of this delivery order
	 */
	@AutoEscape
	public String getDeliveredQty(Locale locale);

	/**
	 * Returns the localized delivered qty of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized delivered qty of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getDeliveredQty(Locale locale, boolean useDefault);

	/**
	 * Returns the localized delivered qty of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized delivered qty of this delivery order
	 */
	@AutoEscape
	public String getDeliveredQty(String languageId);

	/**
	 * Returns the localized delivered qty of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized delivered qty of this delivery order
	 */
	@AutoEscape
	public String getDeliveredQty(String languageId, boolean useDefault);

	@AutoEscape
	public String getDeliveredQtyCurrentLanguageId();

	@AutoEscape
	public String getDeliveredQtyCurrentValue();

	/**
	 * Returns a map of the locales and localized delivered qties of this delivery order.
	 *
	 * @return the locales and localized delivered qties of this delivery order
	 */
	public Map<Locale, String> getDeliveredQtyMap();

	/**
	 * Sets the delivered qty of this delivery order.
	 *
	 * @param deliveredQty the delivered qty of this delivery order
	 */
	public void setDeliveredQty(String deliveredQty);

	/**
	 * Sets the localized delivered qty of this delivery order in the language.
	 *
	 * @param deliveredQty the localized delivered qty of this delivery order
	 * @param locale the locale of the language
	 */
	public void setDeliveredQty(String deliveredQty, Locale locale);

	/**
	 * Sets the localized delivered qty of this delivery order in the language, and sets the default locale.
	 *
	 * @param deliveredQty the localized delivered qty of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setDeliveredQty(
		String deliveredQty, Locale locale, Locale defaultLocale);

	public void setDeliveredQtyCurrentLanguageId(String languageId);

	/**
	 * Sets the localized delivered qties of this delivery order from the map of locales and localized delivered qties.
	 *
	 * @param deliveredQtyMap the locales and localized delivered qties of this delivery order
	 */
	public void setDeliveredQtyMap(Map<Locale, String> deliveredQtyMap);

	/**
	 * Sets the localized delivered qties of this delivery order from the map of locales and localized delivered qties, and sets the default locale.
	 *
	 * @param deliveredQtyMap the locales and localized delivered qties of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setDeliveredQtyMap(
		Map<Locale, String> deliveredQtyMap, Locale defaultLocale);

	/**
	 * Returns the delivered qty unit of this delivery order.
	 *
	 * @return the delivered qty unit of this delivery order
	 */
	public String getDeliveredQtyUnit();

	/**
	 * Returns the localized delivered qty unit of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized delivered qty unit of this delivery order
	 */
	@AutoEscape
	public String getDeliveredQtyUnit(Locale locale);

	/**
	 * Returns the localized delivered qty unit of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized delivered qty unit of this delivery order. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getDeliveredQtyUnit(Locale locale, boolean useDefault);

	/**
	 * Returns the localized delivered qty unit of this delivery order in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized delivered qty unit of this delivery order
	 */
	@AutoEscape
	public String getDeliveredQtyUnit(String languageId);

	/**
	 * Returns the localized delivered qty unit of this delivery order in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized delivered qty unit of this delivery order
	 */
	@AutoEscape
	public String getDeliveredQtyUnit(String languageId, boolean useDefault);

	@AutoEscape
	public String getDeliveredQtyUnitCurrentLanguageId();

	@AutoEscape
	public String getDeliveredQtyUnitCurrentValue();

	/**
	 * Returns a map of the locales and localized delivered qty units of this delivery order.
	 *
	 * @return the locales and localized delivered qty units of this delivery order
	 */
	public Map<Locale, String> getDeliveredQtyUnitMap();

	/**
	 * Sets the delivered qty unit of this delivery order.
	 *
	 * @param deliveredQtyUnit the delivered qty unit of this delivery order
	 */
	public void setDeliveredQtyUnit(String deliveredQtyUnit);

	/**
	 * Sets the localized delivered qty unit of this delivery order in the language.
	 *
	 * @param deliveredQtyUnit the localized delivered qty unit of this delivery order
	 * @param locale the locale of the language
	 */
	public void setDeliveredQtyUnit(String deliveredQtyUnit, Locale locale);

	/**
	 * Sets the localized delivered qty unit of this delivery order in the language, and sets the default locale.
	 *
	 * @param deliveredQtyUnit the localized delivered qty unit of this delivery order
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setDeliveredQtyUnit(
		String deliveredQtyUnit, Locale locale, Locale defaultLocale);

	public void setDeliveredQtyUnitCurrentLanguageId(String languageId);

	/**
	 * Sets the localized delivered qty units of this delivery order from the map of locales and localized delivered qty units.
	 *
	 * @param deliveredQtyUnitMap the locales and localized delivered qty units of this delivery order
	 */
	public void setDeliveredQtyUnitMap(Map<Locale, String> deliveredQtyUnitMap);

	/**
	 * Sets the localized delivered qty units of this delivery order from the map of locales and localized delivered qty units, and sets the default locale.
	 *
	 * @param deliveredQtyUnitMap the locales and localized delivered qty units of this delivery order
	 * @param defaultLocale the default locale
	 */
	public void setDeliveredQtyUnitMap(
		Map<Locale, String> deliveredQtyUnitMap, Locale defaultLocale);

	/**
	 * Returns the company ID of this delivery order.
	 *
	 * @return the company ID of this delivery order
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this delivery order.
	 *
	 * @param companyId the company ID of this delivery order
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this delivery order.
	 *
	 * @return the create date of this delivery order
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this delivery order.
	 *
	 * @param createDate the create date of this delivery order
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this delivery order.
	 *
	 * @return the modified date of this delivery order
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this delivery order.
	 *
	 * @param modifiedDate the modified date of this delivery order
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the status of this delivery order.
	 *
	 * @return the status of this delivery order
	 */
	public int getStatus();

	/**
	 * Sets the status of this delivery order.
	 *
	 * @param status the status of this delivery order
	 */
	public void setStatus(int status);

	@Override
	public String[] getAvailableLanguageIds();

	@Override
	public String getDefaultLanguageId();

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException;

	@Override
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public DeliveryOrder cloneWithOriginalValues();

}