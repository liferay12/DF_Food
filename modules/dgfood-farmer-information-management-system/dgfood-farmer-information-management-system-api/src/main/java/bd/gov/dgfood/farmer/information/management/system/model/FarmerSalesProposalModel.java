/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package bd.gov.dgfood.farmer.information.management.system.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.io.Serializable;

import java.util.Date;
import java.util.Map;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the FarmerSalesProposal service. Represents a row in the &quot;DGFood_SalesProposal&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>bd.gov.dgfood.farmer.information.management.system.model.impl.FarmerSalesProposalModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>bd.gov.dgfood.farmer.information.management.system.model.impl.FarmerSalesProposalImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FarmerSalesProposal
 * @generated
 */
@ProviderType
public interface FarmerSalesProposalModel
	extends BaseModel<FarmerSalesProposal>, ShardedModel, StagedModel,
			WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a farmer sales proposal model instance should use the {@link FarmerSalesProposal} interface instead.
	 */

	/**
	 * Returns the primary key of this farmer sales proposal.
	 *
	 * @return the primary key of this farmer sales proposal
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this farmer sales proposal.
	 *
	 * @param primaryKey the primary key of this farmer sales proposal
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this farmer sales proposal.
	 *
	 * @return the uuid of this farmer sales proposal
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this farmer sales proposal.
	 *
	 * @param uuid the uuid of this farmer sales proposal
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the farmer sales proposal ID of this farmer sales proposal.
	 *
	 * @return the farmer sales proposal ID of this farmer sales proposal
	 */
	public long getFarmerSalesProposalId();

	/**
	 * Sets the farmer sales proposal ID of this farmer sales proposal.
	 *
	 * @param farmerSalesProposalId the farmer sales proposal ID of this farmer sales proposal
	 */
	public void setFarmerSalesProposalId(long farmerSalesProposalId);

	/**
	 * Returns the application number of this farmer sales proposal.
	 *
	 * @return the application number of this farmer sales proposal
	 */
	@AutoEscape
	public String getApplicationNumber();

	/**
	 * Sets the application number of this farmer sales proposal.
	 *
	 * @param applicationNumber the application number of this farmer sales proposal
	 */
	public void setApplicationNumber(String applicationNumber);

	/**
	 * Returns the farmer registration ID of this farmer sales proposal.
	 *
	 * @return the farmer registration ID of this farmer sales proposal
	 */
	public long getFarmerRegistrationId();

	/**
	 * Sets the farmer registration ID of this farmer sales proposal.
	 *
	 * @param farmerRegistrationId the farmer registration ID of this farmer sales proposal
	 */
	public void setFarmerRegistrationId(long farmerRegistrationId);

	/**
	 * Returns the business code of this farmer sales proposal.
	 *
	 * @return the business code of this farmer sales proposal
	 */
	@AutoEscape
	public String getBusinessCode();

	/**
	 * Sets the business code of this farmer sales proposal.
	 *
	 * @param businessCode the business code of this farmer sales proposal
	 */
	public void setBusinessCode(String businessCode);

	/**
	 * Returns the current season of this farmer sales proposal.
	 *
	 * @return the current season of this farmer sales proposal
	 */
	@AutoEscape
	public String getCurrentSeason();

	/**
	 * Sets the current season of this farmer sales proposal.
	 *
	 * @param currentSeason the current season of this farmer sales proposal
	 */
	public void setCurrentSeason(String currentSeason);

	/**
	 * Returns the food grain type of this farmer sales proposal.
	 *
	 * @return the food grain type of this farmer sales proposal
	 */
	@AutoEscape
	public String getFoodGrainType();

	/**
	 * Sets the food grain type of this farmer sales proposal.
	 *
	 * @param foodGrainType the food grain type of this farmer sales proposal
	 */
	public void setFoodGrainType(String foodGrainType);

	/**
	 * Returns the krishi card number of this farmer sales proposal.
	 *
	 * @return the krishi card number of this farmer sales proposal
	 */
	@AutoEscape
	public String getKrishiCardNumber();

	/**
	 * Sets the krishi card number of this farmer sales proposal.
	 *
	 * @param krishiCardNumber the krishi card number of this farmer sales proposal
	 */
	public void setKrishiCardNumber(String krishiCardNumber);

	/**
	 * Returns the past prod data season1 of this farmer sales proposal.
	 *
	 * @return the past prod data season1 of this farmer sales proposal
	 */
	public Map<String, Serializable> getPastProdDataSeason1();

	/**
	 * Sets the past prod data season1 of this farmer sales proposal.
	 *
	 * @param pastProdDataSeason1 the past prod data season1 of this farmer sales proposal
	 */
	public void setPastProdDataSeason1(
		Map<String, Serializable> pastProdDataSeason1);

	/**
	 * Returns the past prod data season2 of this farmer sales proposal.
	 *
	 * @return the past prod data season2 of this farmer sales proposal
	 */
	public Map<String, Serializable> getPastProdDataSeason2();

	/**
	 * Sets the past prod data season2 of this farmer sales proposal.
	 *
	 * @param pastProdDataSeason2 the past prod data season2 of this farmer sales proposal
	 */
	public void setPastProdDataSeason2(
		Map<String, Serializable> pastProdDataSeason2);

	/**
	 * Returns the past prod data season3 of this farmer sales proposal.
	 *
	 * @return the past prod data season3 of this farmer sales proposal
	 */
	public Map<String, Serializable> getPastProdDataSeason3();

	/**
	 * Sets the past prod data season3 of this farmer sales proposal.
	 *
	 * @param pastProdDataSeason3 the past prod data season3 of this farmer sales proposal
	 */
	public void setPastProdDataSeason3(
		Map<String, Serializable> pastProdDataSeason3);

	/**
	 * Returns the succeeding prod data season1 of this farmer sales proposal.
	 *
	 * @return the succeeding prod data season1 of this farmer sales proposal
	 */
	public Map<String, Serializable> getSucceedingProdDataSeason1();

	/**
	 * Sets the succeeding prod data season1 of this farmer sales proposal.
	 *
	 * @param succeedingProdDataSeason1 the succeeding prod data season1 of this farmer sales proposal
	 */
	public void setSucceedingProdDataSeason1(
		Map<String, Serializable> succeedingProdDataSeason1);

	/**
	 * Returns the succeeding prod data season2 of this farmer sales proposal.
	 *
	 * @return the succeeding prod data season2 of this farmer sales proposal
	 */
	public Map<String, Serializable> getSucceedingProdDataSeason2();

	/**
	 * Sets the succeeding prod data season2 of this farmer sales proposal.
	 *
	 * @param succeedingProdDataSeason2 the succeeding prod data season2 of this farmer sales proposal
	 */
	public void setSucceedingProdDataSeason2(
		Map<String, Serializable> succeedingProdDataSeason2);

	/**
	 * Returns the succeeding prod data season3 of this farmer sales proposal.
	 *
	 * @return the succeeding prod data season3 of this farmer sales proposal
	 */
	public Map<String, Serializable> getSucceedingProdDataSeason3();

	/**
	 * Sets the succeeding prod data season3 of this farmer sales proposal.
	 *
	 * @param succeedingProdDataSeason3 the succeeding prod data season3 of this farmer sales proposal
	 */
	public void setSucceedingProdDataSeason3(
		Map<String, Serializable> succeedingProdDataSeason3);

	/**
	 * Returns the grain procured in last4 seasons of this farmer sales proposal.
	 *
	 * @return the grain procured in last4 seasons of this farmer sales proposal
	 */
	public boolean getGrainProcuredInLast4Seasons();

	/**
	 * Returns <code>true</code> if this farmer sales proposal is grain procured in last4 seasons.
	 *
	 * @return <code>true</code> if this farmer sales proposal is grain procured in last4 seasons; <code>false</code> otherwise
	 */
	public boolean isGrainProcuredInLast4Seasons();

	/**
	 * Sets whether this farmer sales proposal is grain procured in last4 seasons.
	 *
	 * @param grainProcuredInLast4Seasons  the grain procured in last4 seasons of this farmer sales proposal
	 */
	public void setGrainProcuredInLast4Seasons(
		boolean grainProcuredInLast4Seasons);

	/**
	 * Returns the foodgran procured season1 of this farmer sales proposal.
	 *
	 * @return the foodgran procured season1 of this farmer sales proposal
	 */
	public Map<String, Serializable> getFoodgranProcuredSeason1();

	/**
	 * Sets the foodgran procured season1 of this farmer sales proposal.
	 *
	 * @param foodgranProcuredSeason1 the foodgran procured season1 of this farmer sales proposal
	 */
	public void setFoodgranProcuredSeason1(
		Map<String, Serializable> foodgranProcuredSeason1);

	/**
	 * Returns the foodgran procured season2 of this farmer sales proposal.
	 *
	 * @return the foodgran procured season2 of this farmer sales proposal
	 */
	public Map<String, Serializable> getFoodgranProcuredSeason2();

	/**
	 * Sets the foodgran procured season2 of this farmer sales proposal.
	 *
	 * @param foodgranProcuredSeason2 the foodgran procured season2 of this farmer sales proposal
	 */
	public void setFoodgranProcuredSeason2(
		Map<String, Serializable> foodgranProcuredSeason2);

	/**
	 * Returns the foodgran procured season3 of this farmer sales proposal.
	 *
	 * @return the foodgran procured season3 of this farmer sales proposal
	 */
	public Map<String, Serializable> getFoodgranProcuredSeason3();

	/**
	 * Sets the foodgran procured season3 of this farmer sales proposal.
	 *
	 * @param foodgranProcuredSeason3 the foodgran procured season3 of this farmer sales proposal
	 */
	public void setFoodgranProcuredSeason3(
		Map<String, Serializable> foodgranProcuredSeason3);

	/**
	 * Returns the foodgran procured season4 of this farmer sales proposal.
	 *
	 * @return the foodgran procured season4 of this farmer sales proposal
	 */
	public Map<String, Serializable> getFoodgranProcuredSeason4();

	/**
	 * Sets the foodgran procured season4 of this farmer sales proposal.
	 *
	 * @param foodgranProcuredSeason4 the foodgran procured season4 of this farmer sales proposal
	 */
	public void setFoodgranProcuredSeason4(
		Map<String, Serializable> foodgranProcuredSeason4);

	/**
	 * Returns the cultivable land season1 of this farmer sales proposal.
	 *
	 * @return the cultivable land season1 of this farmer sales proposal
	 */
	public Map<String, Serializable> getCultivableLandSeason1();

	/**
	 * Sets the cultivable land season1 of this farmer sales proposal.
	 *
	 * @param cultivableLandSeason1 the cultivable land season1 of this farmer sales proposal
	 */
	public void setCultivableLandSeason1(
		Map<String, Serializable> cultivableLandSeason1);

	/**
	 * Returns the cultivable land season2 of this farmer sales proposal.
	 *
	 * @return the cultivable land season2 of this farmer sales proposal
	 */
	public Map<String, Serializable> getCultivableLandSeason2();

	/**
	 * Sets the cultivable land season2 of this farmer sales proposal.
	 *
	 * @param cultivableLandSeason2 the cultivable land season2 of this farmer sales proposal
	 */
	public void setCultivableLandSeason2(
		Map<String, Serializable> cultivableLandSeason2);

	/**
	 * Returns the cultivable land season3 of this farmer sales proposal.
	 *
	 * @return the cultivable land season3 of this farmer sales proposal
	 */
	public Map<String, Serializable> getCultivableLandSeason3();

	/**
	 * Sets the cultivable land season3 of this farmer sales proposal.
	 *
	 * @param cultivableLandSeason3 the cultivable land season3 of this farmer sales proposal
	 */
	public void setCultivableLandSeason3(
		Map<String, Serializable> cultivableLandSeason3);

	/**
	 * Returns the foodgrain received status of this farmer sales proposal.
	 *
	 * @return the foodgrain received status of this farmer sales proposal
	 */
	public int getFoodgrainReceivedStatus();

	/**
	 * Sets the foodgrain received status of this farmer sales proposal.
	 *
	 * @param foodgrainReceivedStatus the foodgrain received status of this farmer sales proposal
	 */
	public void setFoodgrainReceivedStatus(int foodgrainReceivedStatus);

	/**
	 * Returns the received foodgrain qty of this farmer sales proposal.
	 *
	 * @return the received foodgrain qty of this farmer sales proposal
	 */
	public Map<String, Serializable> getReceivedFoodgrainQty();

	/**
	 * Sets the received foodgrain qty of this farmer sales proposal.
	 *
	 * @param receivedFoodgrainQty the received foodgrain qty of this farmer sales proposal
	 */
	public void setReceivedFoodgrainQty(
		Map<String, Serializable> receivedFoodgrainQty);

	/**
	 * Returns the foodgrain received date of this farmer sales proposal.
	 *
	 * @return the foodgrain received date of this farmer sales proposal
	 */
	public Date getFoodgrainReceivedDate();

	/**
	 * Sets the foodgrain received date of this farmer sales proposal.
	 *
	 * @param foodgrainReceivedDate the foodgrain received date of this farmer sales proposal
	 */
	public void setFoodgrainReceivedDate(Date foodgrainReceivedDate);

	/**
	 * Returns the payment status of this farmer sales proposal.
	 *
	 * @return the payment status of this farmer sales proposal
	 */
	public int getPaymentStatus();

	/**
	 * Sets the payment status of this farmer sales proposal.
	 *
	 * @param paymentStatus the payment status of this farmer sales proposal
	 */
	public void setPaymentStatus(int paymentStatus);

	/**
	 * Returns the remarks of this farmer sales proposal.
	 *
	 * @return the remarks of this farmer sales proposal
	 */
	@AutoEscape
	public String getRemarks();

	/**
	 * Sets the remarks of this farmer sales proposal.
	 *
	 * @param remarks the remarks of this farmer sales proposal
	 */
	public void setRemarks(String remarks);

	/**
	 * Returns the version of this farmer sales proposal.
	 *
	 * @return the version of this farmer sales proposal
	 */
	public double getVersion();

	/**
	 * Sets the version of this farmer sales proposal.
	 *
	 * @param version the version of this farmer sales proposal
	 */
	public void setVersion(double version);

	/**
	 * Returns the group ID of this farmer sales proposal.
	 *
	 * @return the group ID of this farmer sales proposal
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this farmer sales proposal.
	 *
	 * @param groupId the group ID of this farmer sales proposal
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this farmer sales proposal.
	 *
	 * @return the company ID of this farmer sales proposal
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this farmer sales proposal.
	 *
	 * @param companyId the company ID of this farmer sales proposal
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this farmer sales proposal.
	 *
	 * @return the create date of this farmer sales proposal
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this farmer sales proposal.
	 *
	 * @param createDate the create date of this farmer sales proposal
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this farmer sales proposal.
	 *
	 * @return the modified date of this farmer sales proposal
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this farmer sales proposal.
	 *
	 * @param modifiedDate the modified date of this farmer sales proposal
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the created by of this farmer sales proposal.
	 *
	 * @return the created by of this farmer sales proposal
	 */
	public long getCreatedBy();

	/**
	 * Sets the created by of this farmer sales proposal.
	 *
	 * @param createdBy the created by of this farmer sales proposal
	 */
	public void setCreatedBy(long createdBy);

	/**
	 * Returns the modified by of this farmer sales proposal.
	 *
	 * @return the modified by of this farmer sales proposal
	 */
	public long getModifiedBy();

	/**
	 * Sets the modified by of this farmer sales proposal.
	 *
	 * @param modifiedBy the modified by of this farmer sales proposal
	 */
	public void setModifiedBy(long modifiedBy);

	/**
	 * Returns the status of this farmer sales proposal.
	 *
	 * @return the status of this farmer sales proposal
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this farmer sales proposal.
	 *
	 * @param status the status of this farmer sales proposal
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this farmer sales proposal.
	 *
	 * @return the status by user ID of this farmer sales proposal
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this farmer sales proposal.
	 *
	 * @param statusByUserId the status by user ID of this farmer sales proposal
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this farmer sales proposal.
	 *
	 * @return the status by user uuid of this farmer sales proposal
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this farmer sales proposal.
	 *
	 * @param statusByUserUuid the status by user uuid of this farmer sales proposal
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this farmer sales proposal.
	 *
	 * @return the status by user name of this farmer sales proposal
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this farmer sales proposal.
	 *
	 * @param statusByUserName the status by user name of this farmer sales proposal
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this farmer sales proposal.
	 *
	 * @return the status date of this farmer sales proposal
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this farmer sales proposal.
	 *
	 * @param statusDate the status date of this farmer sales proposal
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns <code>true</code> if this farmer sales proposal is approved.
	 *
	 * @return <code>true</code> if this farmer sales proposal is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this farmer sales proposal is denied.
	 *
	 * @return <code>true</code> if this farmer sales proposal is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this farmer sales proposal is a draft.
	 *
	 * @return <code>true</code> if this farmer sales proposal is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this farmer sales proposal is expired.
	 *
	 * @return <code>true</code> if this farmer sales proposal is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this farmer sales proposal is inactive.
	 *
	 * @return <code>true</code> if this farmer sales proposal is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this farmer sales proposal is incomplete.
	 *
	 * @return <code>true</code> if this farmer sales proposal is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this farmer sales proposal is pending.
	 *
	 * @return <code>true</code> if this farmer sales proposal is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this farmer sales proposal is scheduled.
	 *
	 * @return <code>true</code> if this farmer sales proposal is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public FarmerSalesProposal cloneWithOriginalValues();

}